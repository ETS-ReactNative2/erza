@import './partials/_mixins';
@import './partials/_colours';
@import '../../node_modules/meiko/dist/templates/_header-links-template';

#erza-header {
  @include applicationHeaderLinks;
}

#erza-header,
#erza-sidebar {
  background: $primary-background;
}
.erza-svg svg {
  background-color: $primary-background;
  color: $primary-colour-contrast;
  &:hover {
    background-color: darken($primary-background, $darken-amount);
  }
}

@each $name, $values in $theme-maps {
  $base-background: map-get($values, base-background);
  $base-colour: map-get($values, base-colour);
  $base-colour-inverse: map-get($values, base-colour-inverse);
  $colour: map-get($values, colour);
  $contrast: map-get($values, contrast);
  $anchor-colour: map-get($values, anchor-colour);
  $anchor-colour-hover: map-get($values, anchor-colour-hover);

  .#{$name} {
    background: $base-background;
    color: $base-colour;

    .themed-background {
      background: $base-background;
    }

    // Generic components
    .input-container,
    .select-container {
      input,
      select {
        background-color: $base-background;
        color: $base-colour;
        &:focus,
        &:focus ~ .list {
          border-bottom-color: $colour;
        }
      }

      input[type='checkbox']::before {
        color: $contrast;
      }
      input[type='checkbox']:checked::before {
        color: $colour;
      }
    }

    .erza-tag button[icon] {
      background: inherit;
      &:hover::before {
        color: $colour;
      }
      &:not(.active):hover::before {
        color: $contrast;
      }
    }

    .erza-autocomplete-menu {
      background-color: $base-background;

      li {
        border: 1px solid $base-background;
        &.active {
          border-color: $colour;
          button {
            color: $colour;
          }
        }
      }
    }

    form button:not(.primary),
    .dialog-content button:not(.primary),
    .button:not(.primary),
    .erza-button:not(.primary) {
      background-color: $base-background;
      color: $base-colour;
      &:hover {
        @include shiftColourLightness($base-background, $darken-amount);
      }
    }
    .erza-button-link:not(.active) {
      color: $anchor-colour;
      &:focus,
      &:active,
      &:visited {
        color: $anchor-colour;
      }
      &:hover {
        color: $anchor-colour-hover;
      }
    }
    .erza-button-icon.bold {
      font-weight: bold;
    }

    input[type='radio']::after,
    input[type='radio']::before {
      color: $contrast;
    }
    input[type='radio']:checked::after {
      color: $colour;
    }

    #app-settings-menu {
      background-color: $base-background;
      box-shadow: 2px 2px 10px $contrast;
      > li:first-child {
        border-bottom-color: $base-background; //20px solid $base-background;
        filter: drop-shadow(0 -2px 2px $contrast);
      }
    }

    //dialogs
    dialog {
      background-color: $base-background;
      color: $base-colour;

      &.backdrop::backdrop {
        background-color: $contrast;
      }
    }

    .tabs-container {
      border-top: 1px solid $primary-background;
    }
    [role='tab']:not(.active) {
      color: $contrast;
      border-color: $contrast;
      border-bottom: none;
    }
    [role='tab'].active {
      border: {
        color: $primary-background;
        bottom-color: $base-background;
      }
    }
    .tab-container .tabs {
      border-top-color: $primary-background;
    }

    // Unique UI elements
    #erza-header {
      li:not(.dropdown-arrow) {
        border-bottom: 1px solid $base-background;
      }
      .group-title {
        background-color: $colour;
        color: $contrast;
      }
    }

    .erza-calendar {
      background-color: $base-background;

      .selected {
        background-color: $contrast !important;
        color: $base-colour-inverse;
      }
    }

    .meiko-request-indicator > div {
      @include shiftColourLightness($colour, $darken-amount * 3);
    }

    .meiko-bouncer > div {
      background: $colour;
    }

    .history-list-item.series-title {
      background-color: $base-background;
      border-bottom-color: $colour;
    }
    .history-list-item:not(.series-title) {
      border-bottom-color: $contrast;
    }

    // satellizer theming
    #satellizer {
      a {
        color: $anchor-colour;
        &:hover {
          color: $anchor-colour-hover;
        }
      }

      #season-key {
        background: $base-background;
      }

      .button:not(.primary) {
        background-color: $base-background;
        color: $base-colour;
        &:hover {
          @include shiftColourLightness($base-background, $darken-amount);
        }
      }

      .accordion-toggler + label:after,
      .accordion-toggler + label:before {
        background: $base-colour;
      }

      .history-breakdown-body__row.month-breakdown:hover,
      .history-breakdown-body__row.year-breakdown:hover,
      .history-breakdown-body__row.month-breakdown:hover a,
      .history-breakdown-body__row.year-breakdown:hover a,
      #series-by-ratings-list > li:hover,
      #series-by-ratings-list > li:hover a,
      .repeated-series-table-row:hover,
      .repeated-series-table-row:hover a {
        background-color: $anchor-colour-hover;
        color: $anchor-colour;
      }

      .history-breakdown-body__data-cell__background {
        background-color: $contrast;
      }

      .rating-label.selected {
        background-color: $colour;
        color: $contrast;
      }
    }
  } // End of Theme block
} // End of @each
